{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PyodideService",
            "id": "injectable-PyodideService-8bba0e59f9eade9d72e4e9cb7425da282a0361d7f7b096dfa14769d012b2b5b79c9bce3c20413f9b26b0697209d82f23427635a5c00d4f804521f7dcfafea345",
            "file": "src/app/pyodide.service.ts",
            "properties": [
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "createExpressionTemplate",
                    "args": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createIntegralStepsTemplate",
                    "args": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createTemplate",
                    "args": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadPyo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "runPython",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Map<string, string>",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\ndeclare module globalThis {\n  var pyodide: any;\n  var __pyodide_module: any;\n}\ndeclare let loadPyodide: any;\nconst PYODIDE_BASE = 'https://cdn.jsdelivr.net/pyodide/v0.20.0/full/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PyodideService {\n\n  isLoading = false;\n\n  constructor() { }\n\n  async loadPyo() {\n    if (!globalThis.__pyodide_module) {\n      this.isLoading = true;\n      loadPyodide({ indexURL: PYODIDE_BASE }).then(async (pyodide: any) => {\n        globalThis.pyodide = pyodide;\n        await pyodide.loadPackage([\"sympy\", \"numpy\", \"micropip\"])\n        await pyodide.runPythonAsync(\n          `\n          import micropip\n          await micropip.install('/assets/antlr4_python3_runtime-4.7-py3-none-any.whl')\n          await micropip.install('/assets/kernel/dist/sympy_kernel-0.0.1-py3-none-any.whl')\n        `);\n        await pyodide.runPythonAsync(`\n        import sympy\n        import numpy\n        import sympy_kernel\n        `)\n        this.isLoading = false;\n      })\n    }\n  }\n\n  createTemplate(latex: string): string {\n    const expressionCode = `\n    import sympy_kernel\n    rst = R\"${latex}\"\n    out = sympy_kernel.solveLatexExprSimple(rst)\n    `\n    return expressionCode\n  }\n\n  createExpressionTemplate(latex: string): string {\n    const expressionCode = `\n    import sympy_kernel\n    rst = R\"${latex}\"\n    out = sympy_kernel.getMultipleExpr(rst)\n    `\n    return expressionCode\n  }\n\n  createIntegralStepsTemplate(latex: string): string {\n    const expressionCode = `\n    import sympy_kernel\n    from sympy.parsing.sympy_parser import parse_expr\n    rst = R\"${latex}\"\n    strexp = sympy_kernel.latex.eval_latex_input(rst)\n    expr = parse_expr(strexp)\n    out = sympy_kernel.integral.print_json_steps(expr.function, expr.variables[0])\n    `\n    return expressionCode\n  }\n\n  get loading(): boolean {\n    return this.isLoading\n  }\n\n  runPython(code: string): Map<string, string> {\n    globalThis.pyodide.runPython(code);\n    let out = globalThis.pyodide.globals.get(\"out\");\n    return out.toJs();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "accessors": {
                "loading": {
                    "name": "loading",
                    "getSignature": {
                        "name": "loading",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 71
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutPageComponent",
            "id": "component-AboutPageComponent-da52e9880a0bcadbb9c12242b1c68f71a496d069208aa772468c677d5039ca479a8d653ea695ef8272503e48884b837cbe276d3ccdd9ce25ca1cd4f47c0cbbb2",
            "file": "src/app/about-page/about-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about-page",
            "styleUrls": [
                "./about-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nconst data = [\n  {\n    \"title\": \"Arithmetic\",\n    \"description\": `\n    Solve arithmetic expressions. \\n \n    Examples: \\n\n    $183 + 233$ \\n\n    $65/13$ \\n\n    $\\sqrt(88*32)$ \\n\n    \\n\n    It can give you answers in simplified form and in decimal form.\n    `\n  },\n  {\n    \"title\": \"Algebra\",\n    \"description\": `\n    \n    `\n  },\n  {\n    \"title\": \"Trigonometry\",\n    \"description\": `math`\n  },\n  {\n    \"title\": \"Calculus\",\n    \"description\": `Solve Limits, Derivatives, and Integrals. \\n`\n  }\n]\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  panelOpenState = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  get items() {\n    return data\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".about-page {\n    padding:10px;\n}",
                    "styleUrl": "./about-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 39
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "items": {
                    "name": "items",
                    "getSignature": {
                        "name": "items",
                        "type": "",
                        "returnType": "",
                        "line": 46
                    }
                }
            },
            "templateData": "<div class=\"about-page\">\n    <mat-card>\n        <mat-card-title>About</mat-card-title>\n        <p>This is a symbolic mathematics solver. Powered by Python and Sympy, it\n            solves many symbolic expressions.\n        </p>\n        <p>\n            Check out the \"What can it solve?\" and \"Formatting\" sections to learn more.\n        </p>\n    </mat-card>\n    <br />\n    <mat-card>\n        <mat-card-title>What can it solve?</mat-card-title>\n        <mat-accordion>\n            <mat-expansion-panel *ngFor=\"let item of items\">\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  {{ item.title }}\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <p>{{ item.description }}</p>\n            </mat-expansion-panel>\n          </mat-accordion>\n    </mat-card>\n    <br />\n    <mat-card>\n        <mat-card-title>Formatting</mat-card-title>\n        <mat-card-content>\n            <p>The calculator accepts two types of input, Latex input\n                and SymPy expressions. \n            </p>\n        </mat-card-content>\n    </mat-card>\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d6e34faa23ee5e96b921082f6f31c91ab206008bdbb9b764a3912347a4c3af39b7a8122e72458be685642cf934af5331a382ab345b84d9f7e8e36aa3330c2037",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { PyodideService } from './pyodide.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private pyodideService: PyodideService\n  ) {}\n\n  ngOnInit() {\n    this.pyodideService.loadPyo();\n  }\n\n  get isLoading() {\n    return this.pyodideService.isLoading\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".body-div {\n    width:100%;\n    height:100%;\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pyodideService",
                        "type": "PyodideService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "pyodideService",
                        "type": "PyodideService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "isLoading": {
                    "name": "isLoading",
                    "getSignature": {
                        "name": "isLoading",
                        "type": "",
                        "returnType": "",
                        "line": 19
                    }
                }
            },
            "templateData": "<app-header>\n  <router-outlet></router-outlet>\n</app-header>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-b05c717467793bb0b2fbd2c4132ea1d6739ae0ce824847fd60ee8764c204e7ff7077b26360eb28cb3367e1c7128d0eb2d139e30053f23c36c51c2f5de537da79-1",
            "file": "src/app/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"\">Home</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item routerLink=\"about\">About</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Mathematics Solver</span>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-00bafafb2c84f53bd04fbfcf38e8b933d1fd6f2646d9bfa19ed3628f1af1ff1558dc183772e8fba15cc6c7eff21007a088115032a34338d0f5b4fa19ea811f70",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "mathOutput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mathOutput'"
                        }
                    ]
                },
                {
                    "name": "mathText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "OutputEEnum",
                    "defaultValue": "OutputEType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "OutputEnum",
                    "defaultValue": "OutputType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "outputEType",
                    "defaultValue": "OutputEType.None",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OutputEType",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "outputLatex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "outputType",
                    "defaultValue": "OutputType.None",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OutputType",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "pythonText",
                    "defaultValue": "`print(\"Hello World\")`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "getSteps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mathFieldChange",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "run",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PyodideService } from '../pyodide.service';\nimport { renderMathInElement } from \"mathlive\"\nimport { OutputType, OutputEType } from \"../shared/enums\";\nimport { getCaptializedName } from '../shared/utils';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  @ViewChild('mathOutput') mathOutput: ElementRef\n\n  pythonText = `print(\"Hello World\")`\n  mathText: string\n  outputType: OutputType = OutputType.None\n  outputEType: OutputEType = OutputEType.None\n  outputLatex: string;\n  public OutputEnum = OutputType;\n  public OutputEEnum = OutputEType;\n\n  constructor(\n    private pyodideService: PyodideService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  run() {\n    this.pyodideService.runPython(this.pythonText)\n  }\n\n  get isLoading(): boolean {\n    return this.pyodideService.isLoading\n  }\n\n  mathFieldChange(text: string): void {\n    console.log(text)\n    this.mathText = text;\n    const template = this.pyodideService.createTemplate(text)\n    const output = this.pyodideService.runPython(template)\n    this.outputEType = output.get(\"etype\") as OutputEType\n    this.outputType = output.get(\"type\") as OutputType;\n    if (this.outputType == OutputType.Latex) {\n      this.outputLatex = \"$\" + output.get(\"ans\") as string + \"$\"\n    }\n    console.log(this.outputEType)\n  }\n\n  get cardName() {\n    return getCaptializedName(this.outputEType)\n  }\n\n  getSteps() {\n    if (this.outputEType == OutputEType.Integral) {\n      const template = this.pyodideService.createIntegralStepsTemplate(this.mathText)\n      const output = this.pyodideService.runPython(template)\n      console.log(output)\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".body-div {\n    height:100%;\n    padding:10px;\n}\n\n.spinner-container {\n    width:100%;\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pyodideService",
                        "type": "PyodideService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "pyodideService",
                        "type": "PyodideService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "isLoading": {
                    "name": "isLoading",
                    "getSignature": {
                        "name": "isLoading",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 35
                    }
                },
                "cardName": {
                    "name": "cardName",
                    "getSignature": {
                        "name": "cardName",
                        "type": "",
                        "returnType": "",
                        "line": 52
                    }
                }
            },
            "templateData": "<div [ngSwitch]=\"isLoading\" class=\"body-div\">\n    <div *ngSwitchCase=\"false\">\n        <math-editor (onValueChange)=\"mathFieldChange($event)\"></math-editor>\n        <br>\n        <div [hidden]=\"outputType !== OutputEnum.Latex\">\n            <mat-card class=\"example-card\">\n                <mat-card-title>{{this.cardName}}</mat-card-title>\n                <mat-card-content>\n                    <p [mathjax]=\"outputLatex\">\n                    </p>\n                </mat-card-content>\n                <mat-card-actions *ngIf=\"this.outputEType == OutputEEnum.Integral\">\n                    <button mat-button (click)=\"getSteps()\">Get Steps</button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n    <div *ngSwitchCase=\"true\" class=\"spinner-container\">\n        <mat-spinner></mat-spinner>\n    </div>\n</div>"
        },
        {
            "name": "MathEditorComponent",
            "id": "component-MathEditorComponent-a2e570d1b2fe5edf4079b210937dd99d9e228fe3c91d30ff1e13a7c2501a8f81df12fa20aad7c8ac7a4598d945db3463606cf6b0d2fbf0363a5535f7b532b56b",
            "file": "src/app/math-editor/math-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MathEditorComponent), multi: true }",
                    "type": "component"
                }
            ],
            "selector": "math-editor",
            "styleUrls": [
                "./math-editor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./math-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mathinput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mathfield'"
                        }
                    ]
                },
                {
                    "name": "mathlive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MathfieldElement",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ElementRef, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MathfieldElement } from 'mathlive';\nimport {mathKeyboard, mathKeyboardLayer } from \"../shared/keyboard\"\ndeclare var length: any;\n\n@Component({\n  selector: 'math-editor',\n  templateUrl: './math-editor.component.html',\n  styleUrls: ['./math-editor.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MathEditorComponent), multi: true }\n  ]\n\n})\nexport class MathEditorComponent implements OnInit {\n\n  @ViewChild('mathfield') mathinput: ElementRef;\n  mathlive: MathfieldElement\n\n  @Output() onValueChange = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.mathlive = new MathfieldElement({\n      fontsDirectory: 'assets/mathlive/fonts',  // https://cortexjs.io/mathlive/guides/integration/.\n      soundsDirectory: 'assets/mathlive/sounds',  // See angular.json.\n      virtualKeyboardMode: 'onfocus',  // https://cortexjs.io/mathlive/guides/virtual-keyboards/.\n      customVirtualKeyboards: mathKeyboard,\n      customVirtualKeyboardLayers: mathKeyboardLayer,\n      virtualKeyboards: 'math-basic math-math math-english math-greek',\n    })\n  }\n\n  ngAfterViewInit() {\n    this.mathinput.nativeElement.appendChild(this.mathlive);\n    this.mathlive.addEventListener('change', (e) => {\n      this.onValueChange.emit(this.mathlive.value)\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#mathfield-element {\n    border: 1px solid white;\n    border-radius: 5px;\n}",
                    "styleUrl": "./math-editor.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div #mathfield id=\"mathfield-element\">\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-b598f010f90737152fed21c3cc224c51ddbda0ccafdfc1dbbfefc5f9640a9b9126be0e8937228853891e035f78b0cffb895e6e9b610316215e7103e478f2aeb3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MaterialModule } from './material/material.module';\nimport { HomeComponent } from './home/home.component';\nimport { MathEditorComponent } from './math-editor/math-editor.component';\nimport { CommonModule } from '@angular/common';\nimport { MathjaxModule } from 'mathjax-angular';\nimport { AboutPageComponent } from './about-page/about-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    MathEditorComponent,\n    AboutPageComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    LayoutModule,\n    MaterialModule,\n    MathjaxModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutPageComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "MathEditorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-7eb9a285f5afa30b31a394427c58003d72cd681232758a36000550c40cdceba6005a184fe1e8cc8abcc2bce2c757b0ce9bd65be755378d2ef6404557c619eca5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutPageComponent } from './about-page/about-page.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'about', component: AboutPageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-ca3e4a68b1b308f0cd835e8f46890f21a29edb9645347bd2005790d2296625e9ccac4237e210e15d5eb5fa8814fbe2c30b6629c21f330d090c2c826e7808748d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatCardModule } from \"@angular/material/card\"\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n\n\n@NgModule({\n  declarations: [],\n  exports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatExpansionModule\n  ]\n})\nexport class MaterialModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "__pyodide_module",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pyodide.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "backspaceKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<VirtualKeyboardKeycap>",
                "defaultValue": "{\n  class: 'action font-glyph',\n  label: '&#x232b;',\n  command: ['performWithFeedback', 'deleteBackward']\n}"
            },
            {
                "name": "betaKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '\\\\Beta', insert: '\\\\Beta\\\\left(#0, #0\\\\right)' }"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/about-page/about-page.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    \"title\": \"Arithmetic\",\n    \"description\": `\n    Solve arithmetic expressions. \\n \n    Examples: \\n\n    $183 + 233$ \\n\n    $65/13$ \\n\n    $\\sqrt(88*32)$ \\n\n    \\n\n    It can give you answers in simplified form and in decimal form.\n    `\n  },\n  {\n    \"title\": \"Algebra\",\n    \"description\": `\n    \n    `\n  },\n  {\n    \"title\": \"Trigonometry\",\n    \"description\": `math`\n  },\n  {\n    \"title\": \"Calculus\",\n    \"description\": `Solve Limits, Derivatives, and Integrals. \\n`\n  }\n]"
            },
            {
                "name": "derivKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  latex: '\\\\mathrm{d}',\n  insert: 'd',\n  variants: [\n    { latex: '\\\\frac{\\\\mathrm{d}' + ph + '}{\\\\mathrm{d' + ph + '}', insert: '\\\\frac{d#0}{d#0}', ...small },\n    { latex: '\\\\frac{\\\\partial' + ph + '}{\\\\partial' + ph + '}', ...small }]\n}"
            },
            {
                "name": "dirKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: 'x_0^+', insert: '^+', variants: [{ latex: 'x_0^-', insert: '^-' }] }"
            },
            {
                "name": "divKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '/', variants: ['\\\\div'] }"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "equalKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '=', variants: ['>', '\\\\geq', '<', '\\\\leq', '\\\\neq'] }"
            },
            {
                "name": "expKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '\\\\exp', insert: '\\\\exp' + ph }"
            },
            {
                "name": "fracKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '\\\\frac' + ph + ph, ...small }"
            },
            {
                "name": "gammaKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '\\\\Gamma', insert: '\\\\Gamma\\\\left(#0\\\\right)' }"
            },
            {
                "name": "intKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  latex: '\\\\int',\n  variants: [{ latex: '\\\\int_0^\\\\infty', ...small },\n    { latex: '\\\\int_{-\\\\infty}^\\\\infty', ...small },\n    { latex: '\\\\int_' + ph + '^' + ph, ...small }],\n  ...small\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "leftKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<VirtualKeyboardKeycap>",
                "defaultValue": "{\n  class: 'action',\n  label: \"<svg><use xlink:href='#svg-arrow-left' /></svg>\",\n  command: ['performWithFeedback', 'moveToPreviousChar']\n}"
            },
            {
                "name": "length",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/math-editor/math-editor.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "limKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '\\\\lim', insert: '\\\\lim_' + ph + ph }"
            },
            {
                "name": "lnKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  latex: '\\\\ln',\n  insert: '\\\\ln' + ph,\n  variants: [\n    { latex: '\\\\ln^' + ph, insert: '\\\\ln^' + ph + ph, ...small },\n    { latex: '\\\\log_' + ph, insert: '\\\\log_' + ph + ph, ...small },\n    { latex: '\\\\log^' + ph + '_' + ph, insert: '\\\\log^' + ph + '_' + ph + ph, ...small }\n  ]\n}"
            },
            {
                "name": "loadPyodide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pyodide.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "mathKeyboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  'math-basic': {\n    label: '123',\n    classes: 'tex-math',\n    layer: 'math-basic'\n  },\n  'math-math': {\n    label: 'f(x)',\n    classes: 'tex-math',\n    layer: 'math-math'\n  },\n  'math-english': {\n    label: 'abc',\n    classes: 'tex-math',\n    layer: 'math-lower-english',\n    layers: ['math-lower-english', 'math-upper-english']\n  },\n  'math-greek': {\n    label: '&alpha;&beta;&gamma;',\n    classes: 'tex-math',\n    layer: 'math-lower-greek',\n    layers: ['math-lower-greek', 'math-upper-greek']\n  }\n}"
            },
            {
                "name": "mathKeyboardLayer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, string | Partial>",
                "defaultValue": "{\n  'math-basic': {\n    rows: [\n      [key('7'), key('8'), key('9'), key('+'), key('-'), mulKey, key('e'), equalKey, parenthesisKey],\n      [key('4'), key('5'), key('6'), divKey, fracKey, powKey, key('i'), key('!'), backspaceKey],\n      [key('1'), key('2'), key('3'), key('0'), key('.'), sqrtKey, key('\\\\pi'), leftKey, rightKey]\n    ]\n  },\n  'math-math': {\n    rows: [\n      [trigKey('sin'), trigKey('cos'), trigKey('tan'), limKey, key('\\\\to'), dirKey, key('\\\\infty'), parenthesisKey],\n      [trigKey('csc'), trigKey('sec'), trigKey('cot'), expKey, lnKey, derivKey, intKey, backspaceKey],\n      [trigKey('sinh'), trigKey('cosh'), trigKey('tanh'), gammaKey, betaKey, xKey, leftKey, rightKey]\n    ]\n  },\n  'math-lower-english': mathEnglish(false),\n  'math-upper-english': mathEnglish(true),\n  'math-lower-greek': mathGreek(false),\n  'math-upper-greek': mathGreek(true)\n}"
            },
            {
                "name": "mulKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: '*', variants: ['\\\\cdot', '\\\\times'] }"
            },
            {
                "name": "parenthesisKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  latex: '\\\\left(#0\\\\right)',\n  variants: ['(', ')', ',', ph],\n  ...small\n}"
            },
            {
                "name": "ph",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'{#0}'"
            },
            {
                "name": "powKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ label: '^', insert: '#@^' + ph }"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "pyodide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pyodide.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "PYODIDE_BASE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pyodide.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://cdn.jsdelivr.net/pyodide/v0.20.0/full/'"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "rightKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<VirtualKeyboardKeycap>",
                "defaultValue": "{\n  class: 'action',\n  label: \"<svg><use xlink:href='#svg-arrow-right' /></svg>\",\n  command: ['performWithFeedback', 'moveToNextChar']\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "shiftKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<VirtualKeyboardKeycap>",
                "defaultValue": "{\n  class: 'action font-glyph modifier',\n  label: \"<svg><use xlink:href='#svg-shift' /></svg>\",\n  command: ['performWithFeedback']\n}"
            },
            {
                "name": "small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ class: 'small' }"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sqrtKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  latex: '\\\\sqrt' + ph,\n  variants: [\n    { latex: '\\\\sqrt[3]' + ph, ...small }, { latex: '\\\\sqrt[#0]' + ph, ...small }\n  ],\n  ...small\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "xKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/keyboard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ latex: 'x', variants: ['y', 'z', 'f'] }"
            }
        ],
        "functions": [
            {
                "name": "addSpecialKeys",
                "file": "src/app/shared/keyboard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "rows",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "upper",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "name",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "rows",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "upper",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "capitalize",
                "file": "src/app/shared/keyboard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "s",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "s",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getCaptializedName",
                "file": "src/app/shared/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "type",
                        "type": "OutputEType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "type",
                        "type": "OutputEType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "key",
                "file": "src/app/shared/keyboard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "latex",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "latex",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mathEnglish",
                "file": "src/app/shared/keyboard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "upper",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "upper",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mathGreek",
                "file": "src/app/shared/keyboard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "upper",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "upper",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "trigKey",
                "file": "src/app/shared/keyboard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "OutputEType",
                "childs": [
                    {
                        "name": "Derivative",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "derivative"
                    },
                    {
                        "name": "Integral",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "integral"
                    },
                    {
                        "name": "Expression",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "expression"
                    },
                    {
                        "name": "Equation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "equation"
                    },
                    {
                        "name": "None",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "none"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            },
            {
                "name": "OutputType",
                "childs": [
                    {
                        "name": "None",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "none"
                    },
                    {
                        "name": "Latex",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "latex"
                    },
                    {
                        "name": "MultipleAnswers",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "multiple_solutions"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums.ts"
            }
        ],
        "groupedVariables": {
            "src/app/pyodide.service.ts": [
                {
                    "name": "__pyodide_module",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pyodide.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                },
                {
                    "name": "loadPyodide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pyodide.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                },
                {
                    "name": "pyodide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pyodide.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                },
                {
                    "name": "PYODIDE_BASE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pyodide.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://cdn.jsdelivr.net/pyodide/v0.20.0/full/'"
                }
            ],
            "src/app/shared/keyboard.ts": [
                {
                    "name": "backspaceKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<VirtualKeyboardKeycap>",
                    "defaultValue": "{\n  class: 'action font-glyph',\n  label: '&#x232b;',\n  command: ['performWithFeedback', 'deleteBackward']\n}"
                },
                {
                    "name": "betaKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '\\\\Beta', insert: '\\\\Beta\\\\left(#0, #0\\\\right)' }"
                },
                {
                    "name": "derivKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  latex: '\\\\mathrm{d}',\n  insert: 'd',\n  variants: [\n    { latex: '\\\\frac{\\\\mathrm{d}' + ph + '}{\\\\mathrm{d' + ph + '}', insert: '\\\\frac{d#0}{d#0}', ...small },\n    { latex: '\\\\frac{\\\\partial' + ph + '}{\\\\partial' + ph + '}', ...small }]\n}"
                },
                {
                    "name": "dirKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: 'x_0^+', insert: '^+', variants: [{ latex: 'x_0^-', insert: '^-' }] }"
                },
                {
                    "name": "divKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '/', variants: ['\\\\div'] }"
                },
                {
                    "name": "equalKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '=', variants: ['>', '\\\\geq', '<', '\\\\leq', '\\\\neq'] }"
                },
                {
                    "name": "expKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '\\\\exp', insert: '\\\\exp' + ph }"
                },
                {
                    "name": "fracKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '\\\\frac' + ph + ph, ...small }"
                },
                {
                    "name": "gammaKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '\\\\Gamma', insert: '\\\\Gamma\\\\left(#0\\\\right)' }"
                },
                {
                    "name": "intKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  latex: '\\\\int',\n  variants: [{ latex: '\\\\int_0^\\\\infty', ...small },\n    { latex: '\\\\int_{-\\\\infty}^\\\\infty', ...small },\n    { latex: '\\\\int_' + ph + '^' + ph, ...small }],\n  ...small\n}"
                },
                {
                    "name": "leftKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<VirtualKeyboardKeycap>",
                    "defaultValue": "{\n  class: 'action',\n  label: \"<svg><use xlink:href='#svg-arrow-left' /></svg>\",\n  command: ['performWithFeedback', 'moveToPreviousChar']\n}"
                },
                {
                    "name": "limKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '\\\\lim', insert: '\\\\lim_' + ph + ph }"
                },
                {
                    "name": "lnKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  latex: '\\\\ln',\n  insert: '\\\\ln' + ph,\n  variants: [\n    { latex: '\\\\ln^' + ph, insert: '\\\\ln^' + ph + ph, ...small },\n    { latex: '\\\\log_' + ph, insert: '\\\\log_' + ph + ph, ...small },\n    { latex: '\\\\log^' + ph + '_' + ph, insert: '\\\\log^' + ph + '_' + ph + ph, ...small }\n  ]\n}"
                },
                {
                    "name": "mathKeyboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  'math-basic': {\n    label: '123',\n    classes: 'tex-math',\n    layer: 'math-basic'\n  },\n  'math-math': {\n    label: 'f(x)',\n    classes: 'tex-math',\n    layer: 'math-math'\n  },\n  'math-english': {\n    label: 'abc',\n    classes: 'tex-math',\n    layer: 'math-lower-english',\n    layers: ['math-lower-english', 'math-upper-english']\n  },\n  'math-greek': {\n    label: '&alpha;&beta;&gamma;',\n    classes: 'tex-math',\n    layer: 'math-lower-greek',\n    layers: ['math-lower-greek', 'math-upper-greek']\n  }\n}"
                },
                {
                    "name": "mathKeyboardLayer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, string | Partial>",
                    "defaultValue": "{\n  'math-basic': {\n    rows: [\n      [key('7'), key('8'), key('9'), key('+'), key('-'), mulKey, key('e'), equalKey, parenthesisKey],\n      [key('4'), key('5'), key('6'), divKey, fracKey, powKey, key('i'), key('!'), backspaceKey],\n      [key('1'), key('2'), key('3'), key('0'), key('.'), sqrtKey, key('\\\\pi'), leftKey, rightKey]\n    ]\n  },\n  'math-math': {\n    rows: [\n      [trigKey('sin'), trigKey('cos'), trigKey('tan'), limKey, key('\\\\to'), dirKey, key('\\\\infty'), parenthesisKey],\n      [trigKey('csc'), trigKey('sec'), trigKey('cot'), expKey, lnKey, derivKey, intKey, backspaceKey],\n      [trigKey('sinh'), trigKey('cosh'), trigKey('tanh'), gammaKey, betaKey, xKey, leftKey, rightKey]\n    ]\n  },\n  'math-lower-english': mathEnglish(false),\n  'math-upper-english': mathEnglish(true),\n  'math-lower-greek': mathGreek(false),\n  'math-upper-greek': mathGreek(true)\n}"
                },
                {
                    "name": "mulKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: '*', variants: ['\\\\cdot', '\\\\times'] }"
                },
                {
                    "name": "parenthesisKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  latex: '\\\\left(#0\\\\right)',\n  variants: ['(', ')', ',', ph],\n  ...small\n}"
                },
                {
                    "name": "ph",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'{#0}'"
                },
                {
                    "name": "powKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ label: '^', insert: '#@^' + ph }"
                },
                {
                    "name": "rightKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<VirtualKeyboardKeycap>",
                    "defaultValue": "{\n  class: 'action',\n  label: \"<svg><use xlink:href='#svg-arrow-right' /></svg>\",\n  command: ['performWithFeedback', 'moveToNextChar']\n}"
                },
                {
                    "name": "shiftKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<VirtualKeyboardKeycap>",
                    "defaultValue": "{\n  class: 'action font-glyph modifier',\n  label: \"<svg><use xlink:href='#svg-shift' /></svg>\",\n  command: ['performWithFeedback']\n}"
                },
                {
                    "name": "small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ class: 'small' }"
                },
                {
                    "name": "sqrtKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  latex: '\\\\sqrt' + ph,\n  variants: [\n    { latex: '\\\\sqrt[3]' + ph, ...small }, { latex: '\\\\sqrt[#0]' + ph, ...small }\n  ],\n  ...small\n}"
                },
                {
                    "name": "xKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/keyboard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ latex: 'x', variants: ['y', 'z', 'f'] }"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/about-page/about-page.component.ts": [
                {
                    "name": "data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/about-page/about-page.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    \"title\": \"Arithmetic\",\n    \"description\": `\n    Solve arithmetic expressions. \\n \n    Examples: \\n\n    $183 + 233$ \\n\n    $65/13$ \\n\n    $\\sqrt(88*32)$ \\n\n    \\n\n    It can give you answers in simplified form and in decimal form.\n    `\n  },\n  {\n    \"title\": \"Algebra\",\n    \"description\": `\n    \n    `\n  },\n  {\n    \"title\": \"Trigonometry\",\n    \"description\": `math`\n  },\n  {\n    \"title\": \"Calculus\",\n    \"description\": `Solve Limits, Derivatives, and Integrals. \\n`\n  }\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/app/math-editor/math-editor.component.ts": [
                {
                    "name": "length",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/math-editor/math-editor.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/keyboard.ts": [
                {
                    "name": "addSpecialKeys",
                    "file": "src/app/shared/keyboard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "rows",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "upper",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "upper",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "capitalize",
                    "file": "src/app/shared/keyboard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "s",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "key",
                    "file": "src/app/shared/keyboard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "latex",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mathEnglish",
                    "file": "src/app/shared/keyboard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "upper",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "upper",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mathGreek",
                    "file": "src/app/shared/keyboard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "upper",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "upper",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trigKey",
                    "file": "src/app/shared/keyboard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/utils.ts": [
                {
                    "name": "getCaptializedName",
                    "file": "src/app/shared/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "type",
                            "type": "OutputEType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "OutputEType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/enums.ts": [
                {
                    "name": "OutputEType",
                    "childs": [
                        {
                            "name": "Derivative",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "derivative"
                        },
                        {
                            "name": "Integral",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "integral"
                        },
                        {
                            "name": "Expression",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "expression"
                        },
                        {
                            "name": "Equation",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "equation"
                        },
                        {
                            "name": "None",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "none"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                },
                {
                    "name": "OutputType",
                    "childs": [
                        {
                            "name": "None",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "none"
                        },
                        {
                            "name": "Latex",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "latex"
                        },
                        {
                            "name": "MultipleAnswers",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "multiple_solutions"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "about",
                        "component": "AboutPageComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/about-page/about-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/about-page/about-page.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/math-editor/math-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MathEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/math-editor/math-editor.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "length",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pyodide.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PyodideService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pyodide.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "__pyodide_module",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pyodide.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadPyodide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pyodide.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pyodide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pyodide.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PYODIDE_BASE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "addSpecialKeys",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "capitalize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "key",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mathEnglish",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mathGreek",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "trigKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "backspaceKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "betaKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "derivKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dirKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "divKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "equalKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "expKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fracKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gammaKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "intKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "leftKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "limKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lnKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mathKeyboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mathKeyboardLayer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mulKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "parenthesisKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ph",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "powKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rightKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "shiftKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sqrtKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/keyboard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "xKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getCaptializedName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}